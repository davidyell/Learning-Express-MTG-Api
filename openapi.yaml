openapi: 3.0.2
info:
  title: MTG Deck Building App Api
  version: 0.0.1
  contact:
    name: David Yell
    url: 'https://github.com/davidyell/Learning-Express-MTG-Api'
    email: neon1024@gmail.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3001'
paths:
  /api/decks:
    get:
      summary: List all available decks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
      parameters: []
  '/api/decks/{deckId}':
    get:
      summary: View a specific deck
      parameters:
        - name: deckId
          in: path
          required: true
          description: The id of the deck to retrieve
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
        '404':
          description: Deck not found
          content:
            application/json:
              schema: {}
  '/api/cards/{cardId}':
    get:
      summary: View a certain cards details
      description: Provides a more in-depth set of data about a card
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
          description: The numerical id of the card to retrieve
          minLength: '1'
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
        '404':
          description: Card not found
          content:
            application/json:
              schema: {}
  /api/players:
    get:
      summary: Get a list of all players
      description: ''
      parameters: []
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
  '/api/players/{playerId}':
    get:
      summary: View a single player
      description: ''
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
          description: Numerical id of the player
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
        '404':
          description: Player not found
          content:
            application/json:
              schema: {}
security: []
components:
  links: {}
  callbacks: {}
  schemas: {}
